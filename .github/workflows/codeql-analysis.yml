name: "CodeQL"
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      languages:
        description: "Languages to analyze"
        required: true
        default: "c-cpp"
jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: 'windows-latest'
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read
    strategy:
      fail-fast: false
      matrix:
        include:
        - language: c-cpp
          build-mode: manual
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
    - if: matrix.build-mode == 'manual'
      shell: pwsh
      run: |
        # Install vcpkg and required packages
        git clone https://github.com/Microsoft/vcpkg.git
        cd vcpkg
        ./bootstrap-vcpkg.bat
        ./vcpkg install curl:x64-windows libcurl:x64-windows
        ./vcpkg integrate install
        cd ..

        # Create a common header file for Windows compatibility
        $winCompatHeader = @"
#ifndef WIN_COMPAT_H
#define WIN_COMPAT_H

#ifdef _WIN32
    #include <winsock2.h>
    #include <ws2tcpip.h>
    #include <windows.h>
    #include <curl/curl.h>
    #pragma comment(lib, "ws2_32.lib")
    #pragma comment(lib, "libcurl.lib")
    
    // Windows compatibility definitions
    #define dlopen LoadLibrary
    #define dlsym GetProcAddress
    #define dlclose FreeLibrary
    #define RTLD_LAZY 0
    
    // WinMain entry point
    int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow) {
        return main(__argc, __argv);
    }
#endif

#endif // WIN_COMPAT_H
"@
        Set-Content -Path "win_compat.h" -Value $winCompatHeader

        # Process each directory
        Get-ChildItem -Directory | ForEach-Object {
            $CppFile = Get-ChildItem -Path $_.FullName -Filter *.cpp | Select-Object -First 1
            if ($CppFile) {
                # Add Windows compatibility header to the source file
                $content = Get-Content $CppFile.FullName
                $newContent = "#include `"../win_compat.h`"`n" + $content
                Set-Content -Path $CppFile.FullName -Value $newContent
                
                # Compile with necessary flags and libraries
                g++ $CppFile.FullName -o "$($_.Name).exe" -I"$PWD/vcpkg/installed/x64-windows/include" -L"$PWD/vcpkg/installed/x64-windows/lib" -lcurl -lws2_32
            }
        }
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
